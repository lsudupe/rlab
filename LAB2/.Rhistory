plot(altpes$Altura, altpes$Peso, xlab='Altura (cm)', ylab='Peso (kg)')
library(readr)
altpes <- read_delim('/Users/lsudu/code/rlab/LAB2/LAB2_Data/Altpes.csv',
';', escape_double =FALSE, trim_ws=TRUE)
head(altpes)
summary(altpes)
plot(altpes$Altura, altpes$Peso, xlab='altura', ylab='peso')
modelo <- lm(altpes$Altura~altpes$Peso, data=altpes)
summary(modelo)
cor(altpes)
cor.test(altpes$Altura, altpes$Peso, method='pearson')
#Otra manera de representarlo
install.packages('PerformanceAnalytics')
library(PerformanceAnalytics)
data <- data.frame(altpes$Altura, altpes$Peso)
chart.Correlation(data)
#install.packages('AER')
#library(AER)
residuos<-rstandard(modelo) # residuos estándares del modelo ajustado (completo)
par(mfrow=c(1,3)) # divide la ventana en una fila y tres columnas
hist(residuos) # histograma de los residuos estandarizados
boxplot(residuos) # diagrama de cajas de los residuos estandarizados
qqnorm(residuos) # gráfico de cuantiles de los residuos estandarizados
abline(h=0)
par(mfrow=c(1,1)) # devuelve la pantalla a su estado original sin divisiones
plot(fitted.values(modelo), rstandard(modelo), xlab='Valores ajustados',
ylab='Residuos estandarizados')
abline(h=0) #dibujamos la recta en el 0
plot(fitted.values(modelo), rstandard(modelo), xlab='Valores ajustados',
ylab='Residuos estandarizados')
abline(h=0) #dibujamos la recta en el 0
par(mfrow=c(1,1))
plot(altpes$Altura,rstandard(modelo),xlab="Altura",
ylab="Residuos estandarizados")
abline(h=0)
plot(altpes$Peso,rstandard(modelo),xlab="Peso",
ylab="Residuos estandarizados")
abline(h=0)
par(mfrow=c(1,2))
plot(altpes$Altura,rstandard(modelo),xlab="Altura",
ylab="Residuos estandarizados")
abline(h=0)
plot(altpes$Peso,rstandard(modelo),xlab="Peso",
ylab="Residuos estandarizados")
abline(h=0)
plot(altpes$Altura, altpes$Peso, xlab='Altura (cm)', ylab='Peso (kg)')
abline(modelo)
peso_m168 <- 126.4061 + 0.6204(168)
peso_m168
peso_m168 = 126.4061 + 0.6204*(168)
peso_m168
peso_m168 = 0.6204 + 126.4061*(168)
peso_m168
peso_m168 = -126.4061 + 0.6204*(168)
peso_m168
plot(altpes$Peso altpes$Altura, xlab='Peso (kg)', ylab='Altura (cm)')
plot(altpes$Peso, altpes$Altura, xlab='Peso (kg)', ylab='Altura (cm)')
abline(modelo) # no entiendo porque no me aparece la linea de tendencia
peso_m168 = 126.4061 + 0.6204*(168)
peso_m168
plot(altpes$Altura, altpes$Peso, xlab='Altura (cm)', ylab='Peso (kg)')
abline(modelo) # no entiendo porque no me aparece la linea de tendencia
library(readr)
altpes <- read_delim('/Users/lsudu/code/rlab/LAB2/LAB2_Data/Altpes.csv',
';', escape_double =FALSE, trim_ws=TRUE)
head(altpes)
summary(altpes)
plot(altpes$Altura, altpes$Peso, xlab='altura', ylab='peso')
modelo <- lm(altpes$Altura~altpes$Peso, data=altpes)
summary(modelo)
cor(altpes)
cor.test(altpes$Altura, altpes$Peso, method='pearson')
#Otra manera de representarlo
#install.packages('PerformanceAnalytics')
library(PerformanceAnalytics)
data <- data.frame(altpes$Altura, altpes$Peso)
chart.Correlation(data)
#install.packages('AER')
#library(AER)
residuos<-rstandard(modelo) # residuos estándares del modelo ajustado (completo)
par(mfrow=c(1,3)) # divide la ventana en una fila y tres columnas
hist(residuos) # histograma de los residuos estandarizados
boxplot(residuos) # diagrama de cajas de los residuos estandarizados
qqnorm(residuos) # gráfico de cuantiles de los residuos estandarizados
abline(h=0)
par(mfrow=c(1,1)) # devuelve la pantalla a su estado original sin divisiones
plot(fitted.values(modelo), rstandard(modelo), xlab='Valores ajustados',
ylab='Residuos estandarizados')
abline(h=0) #dibujamos la recta en el 0
par(mfrow=c(1,2))
plot(altpes$Altura,rstandard(modelo),xlab="Altura",
ylab="Residuos estandarizados")
abline(h=0)
plot(altpes$Peso,rstandard(modelo),xlab="Peso",
ylab="Residuos estandarizados")
abline(h=0)
plot(altpes$Altura, altpes$Peso, xlab='Altura (cm)', ylab='Peso (kg)')
abline(modelo) # no entiendo porque no me aparece la linea de tendencia
#(Intercept) 126.4061
#altpes$Peso   0.6204
peso_m168 = 126.4061 + 0.6204*(168)
peso_m168
modelo <- lm(formula= altpes$Altura~altpes$Peso, data=altpes)
summary(modelo)
cor(altpes$Altura, altpes$Peso)
cor.test(altpes$Altura, altpes$Peso, method="pearson")
modelo <- lm(formula= altpes$Peso~altpes$Altura, data=altpes)
summary(modelo)
library(readr)
altpes <- read_delim('/Users/lsudu/code/rlab/LAB2/LAB2_Data/Altpes.csv',
';', escape_double =FALSE, trim_ws=TRUE)
head(altpes)
summary(altpes)
plot(altpes$Altura, altpes$Peso, xlab='altura', ylab='peso')
modelo <- lm(formula= altpes$Peso~altpes$Altura, data=altpes)
summary(modelo)
cor(altpes)
cor.test(altpes$Altura, altpes$Peso, method='pearson')
#Otra manera de representarlo
#install.packages('PerformanceAnalytics')
library(PerformanceAnalytics)
data <- data.frame(altpes$Altura, altpes$Peso)
chart.Correlation(data)
#install.packages('AER')
#library(AER)
residuos<-rstandard(modelo) # residuos estándares del modelo ajustado (completo)
par(mfrow=c(1,3)) # divide la ventana en una fila y tres columnas
hist(residuos) # histograma de los residuos estandarizados
boxplot(residuos) # diagrama de cajas de los residuos estandarizados
qqnorm(residuos) # gráfico de cuantiles de los residuos estandarizados
abline(h=0)
par(mfrow=c(1,1)) # devuelve la pantalla a su estado original sin divisiones
plot(fitted.values(modelo), rstandard(modelo), xlab='Valores ajustados',
ylab='Residuos estandarizados')
abline(h=0) #dibujamos la recta en el 0
par(mfrow=c(1,2))
plot(altpes$Altura,rstandard(modelo),xlab="Altura",
ylab="Residuos estandarizados")
abline(h=0)
plot(altpes$Peso,rstandard(modelo),xlab="Peso",
ylab="Residuos estandarizados")
abline(h=0)
plot(altpes$Altura, altpes$Peso, xlab='Altura (cm)', ylab='Peso (kg)')
abline(modelo) # no entiendo porque no me aparece la linea de tendencia
#(Intercept) 126.4061
#altpes$Peso   0.6204
peso_m168 = 126.4061 + 0.6204*(168)
peso_m168
peso_m168 = -78.3168 + 0.8733*(168)
peso_m168
cor.test(altpes$Altura, altpes$Peso, method='pearson')
cor.test(altpes$Peso, altpes$Altura, method='pearson')
